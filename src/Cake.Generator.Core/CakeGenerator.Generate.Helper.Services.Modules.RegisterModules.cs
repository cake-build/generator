// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.

namespace Cake.Generator;

public partial class CakeGenerator
{
    private static string GenerateModules(IList<ModuleInfo> modules)
    {
        var sb = new StringBuilder();
        sb.AppendLine(
            """
            // <auto-generated/>
            #nullable enable

            using Cake.Core.Composition;
            using Microsoft.Extensions.DependencyInjection;

            public static partial class Program
            {
                private static partial class Helper
                {
                    /// <summary>
                    /// Registers all discovered Cake modules with the service collection.
                    /// This method is called between AddCakeCore calls in GetServiceProvider.
                    /// </summary>
                    /// <param name="services">The service collection to register modules with.</param>
                    static partial void RegisterModules(IServiceCollection services)
                    {
                        var adapter = new ServiceCollectionAdapter();
            
            """);

        // Generate registration for each module
        foreach (var module in modules)
        {
            sb.AppendLine(
                $$"""
                            // Register {{module.Name}}
                            new {{module.FullName}}().Register(adapter);
                
                """);
        }

        sb.AppendLine(
            """
                        // Transfer all registered services to the IoC container
                        adapter.Transfer(services);
                    }
            
            """);

        sb.AppendLine(ServiceCollectionAdapter);

        sb.AppendLine(
            """
                }
            }
            """);

        return sb.ToString();
    }
}
